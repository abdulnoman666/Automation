// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace UITestAutomation.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("NewCase(DisputeSubmission)")]
    public partial class NewCaseDisputeSubmissionFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "NewCase(DisputeSubmission).feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "NewCase(DisputeSubmission)", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line hidden
#line 4
 testRunner.Given("User log into Dispute Tracking Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 5
 testRunner.And("User should be able to see Dashboard in Application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("NewCase")]
        [NUnit.Framework.CategoryAttribute("tag1")]
        public virtual void NewCase()
        {
            string[] tagsOfScenario = new string[] {
                    "tag1"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("NewCase", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 3
this.FeatureBackground();
#line hidden
#line 8
 testRunner.Given("User clicks the Submissions Field on the Dashboard page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And("User selects the Submissions List Field from the dropdown menu of Submissions", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("User clicks the New Case Button on Submissions List Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And("User enters \"Debit Card\" in Transaction Method field on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("User clicks the Fraud Button from Listed Transactions on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("User clicks the Advanced Search Button on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("User enters \"singal\" in the Customer Name field on Customer Search Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("User clicksthe Search Button on Customer Search Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("User Selects the Customer from the Customers Dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("User enters \"UI Automation\" in Details on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("User clicks the Additional Tasks on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("User enters \"Send to Customer\" in Task Name field on Add Task Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("User clicks the Save Button on Add Task Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("User clicks the Transaction List on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                            "Field",
                            "Value"});
                table73.AddRow(new string[] {
                            "Amount",
                            "1200"});
                table73.AddRow(new string[] {
                            "Disputed Amount",
                            "1000"});
                table73.AddRow(new string[] {
                            "Merchant",
                            "Abdul"});
                table73.AddRow(new string[] {
                            "Detail",
                            "abc"});
#line 22
 testRunner.And("User Enters the following data on Add Transaction Page", ((string)(null)), table73, "And ");
#line hidden
#line 28
 testRunner.And("User clicks the Save Button on Add Transaction Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("User clicks the Next Button on Dispute Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("User clicks the Yes Button for Debit Card possession on Debit Card Dispute Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("User clicks the Yes Button for Stolen Card Report", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("User enters \"11/31/2022\" in Filed Date field", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("User enters \"abc\"  in City Report Filed In field on Debit Card Dispute Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("User clicks the Button for Check appropriate dispute reason", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("User clicks No Button for Card has been closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("User enters  \"abc\" in Date Card Closed on Debit Card Dispute Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("User clicks the Customer Signature form Button on Debit Card Dispute Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("User clicks the Confirm Electronic Signautre Consent Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("User clicks the Acknowledgment Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("User clicks the Confirm Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("User clicks in the Signature Field on Debit Card Dispute Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("User clicks the Acknowledge Button on Debit Card Dispute Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("User clicks the Done Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table74.AddRow(new string[] {
                            "Print Letter"});
                table74.AddRow(new string[] {
                            "Select PC Calculation"});
                table74.AddRow(new string[] {
                            "Edit Submission"});
                table74.AddRow(new string[] {
                            "Process.Transactions"});
                table74.AddRow(new string[] {
                            "Run Automation"});
                table74.AddRow(new string[] {
                            "Edit Customer"});
                table74.AddRow(new string[] {
                            "All Submission"});
                table74.AddRow(new string[] {
                            "Activity History"});
                table74.AddRow(new string[] {
                            "Refresh Submissions"});
                table74.AddRow(new string[] {
                            "Transactions"});
                table74.AddRow(new string[] {
                            "Comments and Resolution"});
                table74.AddRow(new string[] {
                            "Save Comments"});
                table74.AddRow(new string[] {
                            "Public"});
                table74.AddRow(new string[] {
                            "Date"});
                table74.AddRow(new string[] {
                            "Created By"});
                table74.AddRow(new string[] {
                            "Notes"});
                table74.AddRow(new string[] {
                            "Add Note"});
                table74.AddRow(new string[] {
                            "View All"});
                table74.AddRow(new string[] {
                            "Status"});
                table74.AddRow(new string[] {
                            "Task Name"});
                table74.AddRow(new string[] {
                            "Created On"});
                table74.AddRow(new string[] {
                            "Assigned To"});
                table74.AddRow(new string[] {
                            "Assigned On"});
                table74.AddRow(new string[] {
                            "Closed On"});
                table74.AddRow(new string[] {
                            "Calculate Interest"});
                table74.AddRow(new string[] {
                            "Pre-Auth"});
                table74.AddRow(new string[] {
                            "Date Transaction"});
                table74.AddRow(new string[] {
                            "DeadlineTransaction"});
                table74.AddRow(new string[] {
                            "POS"});
                table74.AddRow(new string[] {
                            "FT"});
                table74.AddRow(new string[] {
                            "Amount"});
                table74.AddRow(new string[] {
                            "Disputed Amount"});
                table74.AddRow(new string[] {
                            "Merchant"});
                table74.AddRow(new string[] {
                            "Do Not Send"});
#line 44
 testRunner.And("User validates the following Fields in Submission Info Dialog on Edit Submission " +
                        "Page", ((string)(null)), table74, "And ");
#line hidden
#line 80
 testRunner.And("User clicks the Questionnaire on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table75.AddRow(new string[] {
                            "Questionnaire"});
                table75.AddRow(new string[] {
                            "Save Questionaire to PDF"});
                table75.AddRow(new string[] {
                            "Print Questionaire"});
                table75.AddRow(new string[] {
                            "Email Questionaire"});
#line 81
 testRunner.And("User validates the following Fields in  Questionnaire Dialog", ((string)(null)), table75, "And ");
#line hidden
#line 87
 testRunner.And("User clicks the Forms on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table76.AddRow(new string[] {
                            "Select Form to View"});
                table76.AddRow(new string[] {
                            "Save Form Data"});
                table76.AddRow(new string[] {
                            "Save PDF"});
                table76.AddRow(new string[] {
                            "Send to Customer for E-Signature"});
#line 88
 testRunner.And("User validates the following Fields in Forms Dialog", ((string)(null)), table76, "And ");
#line hidden
#line 94
 testRunner.And("User clicks the Disputes on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table77.AddRow(new string[] {
                            "Select Automation"});
                table77.AddRow(new string[] {
                            "Run Selected Workflow Automation"});
                table77.AddRow(new string[] {
                            "Settings Dispute"});
                table77.AddRow(new string[] {
                            "Hide Closed Disputes"});
                table77.AddRow(new string[] {
                            "Submission Info"});
                table77.AddRow(new string[] {
                            "Action"});
                table77.AddRow(new string[] {
                            "Id"});
                table77.AddRow(new string[] {
                            "Transaction Date"});
                table77.AddRow(new string[] {
                            "Amount"});
                table77.AddRow(new string[] {
                            "Merchant"});
                table77.AddRow(new string[] {
                            "PC"});
                table77.AddRow(new string[] {
                            "Status"});
                table77.AddRow(new string[] {
                            "Research Detail"});
                table77.AddRow(new string[] {
                            "Notes"});
#line 95
 testRunner.And("User validates the following Fields in Disputes Dialog", ((string)(null)), table77, "And ");
#line hidden
#line 111
 testRunner.And("User clicks the Customer Status on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table78.AddRow(new string[] {
                            "Case Number"});
                table78.AddRow(new string[] {
                            "Third Party Breach Source"});
                table78.AddRow(new string[] {
                            "CAMS Case Number"});
                table78.AddRow(new string[] {
                            "Amount Prevented by Fraud Detection System"});
                table78.AddRow(new string[] {
                            "Submission Status"});
                table78.AddRow(new string[] {
                            "Provisional Credit Reversed"});
                table78.AddRow(new string[] {
                            "Resolution Notice Sent"});
                table78.AddRow(new string[] {
                            "Merchant Credit"});
                table78.AddRow(new string[] {
                            "Merchant Credit Date"});
                table78.AddRow(new string[] {
                            "Final Credit"});
                table78.AddRow(new string[] {
                            "Final Credit Date"});
                table78.AddRow(new string[] {
                            "Insurance Amount"});
                table78.AddRow(new string[] {
                            "Chargeback Amount"});
                table78.AddRow(new string[] {
                            "Other Fees"});
                table78.AddRow(new string[] {
                            "Fee Reversal Amount"});
                table78.AddRow(new string[] {
                            "Interest Credit Amount"});
                table78.AddRow(new string[] {
                            "Processor Resolution Date"});
                table78.AddRow(new string[] {
                            "Processor Case Date"});
                table78.AddRow(new string[] {
                            "Save"});
#line 112
 testRunner.And("User validates the following Fields in Customer Status Dialog", ((string)(null)), table78, "And ");
#line hidden
#line 133
 testRunner.And("User clicks the Contacts on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table79.AddRow(new string[] {
                            "Contact Name"});
                table79.AddRow(new string[] {
                            "Reference"});
                table79.AddRow(new string[] {
                            "Phone Contact"});
                table79.AddRow(new string[] {
                            "Email"});
                table79.AddRow(new string[] {
                            "Action"});
                table79.AddRow(new string[] {
                            "Download"});
#line 134
 testRunner.And("User validates the following Fields in Contacts Dialog", ((string)(null)), table79, "And ");
#line hidden
#line 142
 testRunner.And("User clicks the GL Ledger on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table80.AddRow(new string[] {
                            "Date"});
                table80.AddRow(new string[] {
                            "Description"});
                table80.AddRow(new string[] {
                            "GL Account"});
                table80.AddRow(new string[] {
                            "Account"});
                table80.AddRow(new string[] {
                            "Transaction Code"});
                table80.AddRow(new string[] {
                            "Amount"});
                table80.AddRow(new string[] {
                            "Delete Ledger Entry"});
                table80.AddRow(new string[] {
                            "Add GL Transaction"});
#line 143
 testRunner.And("User validates the following Fields in GL Ledger Dialog", ((string)(null)), table80, "And ");
#line hidden
#line 153
 testRunner.And("User clicks the Documents on Edit Submission Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                            "Fields"});
                table81.AddRow(new string[] {
                            "Delete Document"});
                table81.AddRow(new string[] {
                            "Download Document"});
                table81.AddRow(new string[] {
                            "Edit Document Description"});
#line 154
 testRunner.And("User validates the following Fields in Documents Dialog", ((string)(null)), table81, "And ");
#line hidden
#line 159
 testRunner.And("User clicks the Dashboard Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
